The Ultimate Flutter Tutorial for Beginners - 2025 Full Course, by Flutter Mapp
https://www.youtube.com/watch?v=3kaGC_DrUnw

Chapters
üöÄ 1. Key Concepts
    00:00:00‚Äã Create a project
    00:02:22 Widget inside Widget
    00:04:56 Widget vs Argument
    00:07:12 Types
    00:09:30 Mouse over

üìê 2. Basic Layouts
    00:12:12: Container
        A versatile box widget used for layout, styling, padding, margin, alignment, and decoration.
        Container(
            width: 100,
            height: 100,
            color: Colors.blue,
            child: Text('Hello'),
        );

    00:16:48 Column
        Lays out its children vertically (top to bottom).
        Column(
            mainAxisAlignment: MainAxisAlignment.center,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
                Text('First'),
                Text('Second'),
            ],
        );

    00:22:10 Row
        Lays out its children horizontally (left to right).
        Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
                Icon(Icons.star),
                Text('Star'),
            ],
        );

    00:25:22 Center
        Centers its child both vertically and horizontally.
        Center(
            child: Text('Centered'),
        );

    00:27:17 Images
        Displays an image from assets, network, file, or memory.
        Image.asset('assets/image.png');       // From assets (must configure assets: in pubspec.yaml)
        Image.network('https://example.com');  // From network

    00:32:06 Extensions (only for VS code)

    00:33:27 Stack
        Places widgets on top of each other (like layers).
        Stack(
            alignment: Alignment.center,
            children: [
                Container(width: 200, height: 200, color: Colors.red),
                Text('On top'),
            ],
        );

    00:35:48 Padding
        Adds empty space inside its parent and around its child, helping control the layout and spacing of widgets
        without affecting their size directly. ONLY used for padding. If you need other parameters/styles - use Container()
        Padding(
            padding: EdgeInsets.all(16.0), // space on all sides
            child: Text('Hello with padding'),
        );

    00:36:46 SizedBox
        Like a Container(), but simpler -used to give a fixed width and/or height to its child or
        create empty space between widgets. If no child is provided it acts as an invisible spacer.
        Can also be used as SizedBox.expand() to fill available space.
        SizedBox(
            width: 200,
            height: 100,
            child: Container(color: Colors.blue),
        );

    00:37:33 Icon
        Used to display material design icons. It‚Äôs lightweight and commonly used in
        buttons, navigation bars, and UI decorations.
        Icon(
            Icons.star,
            color: Colors.yellow,
            size: 30,
        );

    00:38:56 ListTile
        Prebuilt widget for creating a single row in a list with a leading icon or image,
        a title, a subtitle, and a trailing widget (like an arrow or button).
        ListTile(
            leading: Icon(Icons.person),
            title: Text('John Doe'),
            subtitle: Text('Online'),
            trailing: Icon(Icons.arrow_forward),
            onTap: () {
                print('Tile tapped');
            },
        );

    00:40:59 print
        print() - prints to the console

    00:41:47 Wrap
        Automatically moves its children to the next line (or column) when there‚Äôs not enough space.
        It‚Äôs perfect for chips, tags, buttons, or any content that should flow responsively.
        Like a Row(), but wraps to next line
        Wrap(
            spacing: 8.0,       // space between items horizontally
            runSpacing: 4.0,    // space between lines vertically
            children: [
                Chip(label: Text('Flutter')),
                Chip(label: Text('Dart')),
                Chip(label: Text('UI')),
            ],
        );


üê¶‚Äçüî• 3. Master Layout
    00:43:17 MaterialApp & Scaffold
    00:47:21 AppBar
    00:50:05 NavigationBar
    00:53:53 FloatingActionButton
    00:56:11 Drawer
    00:57:53 SafeArea

üîß 4. Debugging
    00:59:49 Type 1
    01:01:20 Type 2
    01:05:26 Null Safety

‚ö° 5. States
    01:07:19 Stateful
    01:11:42 Recap
    01:17:18 Split your Widgets
    01:20:30 Widget Tree
    01:25:12 ValueNotifier
    01:31:41 Challenge
    01:34:30 Solution

üñãÔ∏è 6. User Inputs
    01:38:32 TextField
    01:42:33 Checkbox
    01:45:09 Arrow function
    01:46:15 Switch
    01:47:57 .adaptive
    01:49:11 Slider
    01:51:12 SingleChildScrollView
    01:52:51 GestureDetector
    01:54:01 InkWell
    01:55:34 Buttons
    01:59:07 DropdownButton

üó∫Ô∏è 7. Navigation
    02:02:34 Push
    02:02:34 Pop
    02:09:16 PushReplacement
    02:10:59 Send Data Through pages

üëæ 8. Clean UI
    02:13:18 ClipRRect
    02:17:40 Hero
    02:22:14 SnackBar
    02:25:29 Alert
    02:29:06 Divider
    02:30:40 Card
    02:33:36 Text

üì¶ 9. Packages
    02:36:57 Lotties
    02:43:17 FittedBox
    02:46:50 UI modification
    02:54:33 Overrides
    02:56:49 UI modification
    03:01:20 UI modification (again)
    03:06:49 Verify and fix your App
    03:14:33 UI modification
    03:18:30 Shared Preferences
    03:26:33 UI modification
    03:37:57 UI modification (again)
    03:43:43 UI modification (again & again)
    03:55:57 Flutter Launcher Icons
    04:01:44 CircleAvatar

üì± 10. Responsive UI
    04:07:48 FractionallySizedBox
    04:09:55 LayoutBuilder
    04:12:41 MediaQuery
    04:14:42 AspectRatio
    04:17:40 Expanded & Flexible

üåê 11. Networking
    04:26:42 Intro
    04:29:00 Get
    04:37:56 Explain
    04:41:24 Class
    04:47:07 FutureBuilder
    04:53:41 AI

üéØ 12. Next Steps
    04:58:50 Let's talk about State Management
    05:00:59 Internationalizing
    05:02:12 Firebase
    05:03:25 Publish
    05:04:30 Animations
    05:10:14 The end.
