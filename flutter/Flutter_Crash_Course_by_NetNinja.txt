#4 - Making a New Flutter Project
    flutter create coffee_card

#5 - Quick Project Overview
    lib/ - All the application source code
    pubspec.yaml - project configuration file
    analysis_options.yaml - analyzer configuration file

#6 - Widgets
    Almost everything in Flutter is a Widget. Widgets are basically classes
    MyApp() - root widget (or whatever is passed to the runApp() function)
    build() - function in MyApp must return a widget or a widget tree

#7 - MaterialApp & Scaffold
    MaterialApp() - a convenience widget that sets up many of the things you typically
        need when building an app that follows Material Design guidelines
    CupertinoApp() - used to build iOS-style applications following Apple’s Cupertino
        design guidelines

    * Text widgets must be wrapped in a Material ancestor widget to be styled correctly
        ex. Scaffold()
    Scaffold() - provides a base layout for the application, appBar at the top with a title, body, etc.

#8 - Stateless Widgets
    A widget that does not have any mutable (changeable) state. once it’s built, it can’t change
        its appearance or data unless its parent widget rebuilds it with new information.

    * Insert boilerplate code with 'stl':
        class MyWidget extends StatelessWidget {
            const MyWidget({super.key});

            @override
            Widget build(BuildContext context) {
                return const Placeholder();
            }
        }
    * the build() function must return a widget or a widget tree
    * BuildContext context - the widget's location in the tree (plus access to the widget tree above it)

#9 - Containers
    * Container() - widget that acts as a wrapper to other Widgets
        We can apply margin and padding around the inside Widgets
        Size - The container takes only the space required by its children, or
            if no children - takes all available space from its parent.
            Size can be overridden with width: and height: properties

#10 - Imports & Quick Refactor

#11 - Columns
    * Column() - widget that lets us create a columns of multiple child widgets
    * children: [widget1, widget2, ...]

#12 - Rows
    * Row() - widget that lets us create a row of multiple child widgets
    * children: [widget1, widget2, ...]

#13 - Images
    * Place images in project/assets folder
    * In pubspec.yaml:
    flutter:
        assets:
            - path/to/image.jpg
            - path/to/image2.png
    * Image() - Widget that displays an image
        - several named constructors, depending on image source:
            .asset() .file() .memory() .network()

#14 - Expanded Widget
    Expanded() - tells its child to take up as much space as possible
        along the main axis (the direction of the Row or Column).

#15 - Buttons & Press Events
    *** Material 3 button types:
        ElevatedButton(), FilledButton(), FilledButton.tonal(),
        OutlinedButton(), TextButton()
    * To set style: property, easiest way is ButtonType.styleFrom()
    * onPressed: property - function that executes when pressed
    FilledButton(
        style: FilledButton.styleFrom(
            backgroundColor: Colors.brown,
            foregroundColor: Colors.white,
        ),
        onPressed: increaseStrength,
        child: const Text('+'),
    ),

#16 - Stateful widgets
    A widget that can change over time — it has mutable state that affects how it
    looks or behaves. In contrast to a StatelessWidget (which is fixed once built),
    a StatefulWidget can rebuild itself whenever its state changes.

    It consists of 2 classes:
    - The widget itself, extends the StatefulWidget class
    - The state itself, extends the State class

    To invoke state change:
    setState(() {
        state changing statement
    });

#17 - Control Flow in Lists


