*** My Notes App ***


Chapter 8 - Project Setup

* Adding dependencies (firebase_core, firebase_auth, cloud_firestore, firebase_analytics):
    flutter pub add <dependency>   - Adds dependency to pubspec.yaml and downloads it.


Chapter 10 - Android App Setup

* Android SDK (Host and Devcontainer)
* USB Debugging (on device, developer options)
* Setup ADB (Android Debug Bridge) on both Windows Host and DevEnv (if using devcontainer)
* Disable screen sleeping (on device, developer options)
* Android Mirroring (Optional):
    https://github.com/Genymobile/scrcpy/

* Enabling Multi-Dex (Optional, for projects with a lot of dependencies, exceeding 65,536 methods (including your code + libraries))
    - Check (if build is successful, multi-dex NOT required)
    - If execution fails with error: Method count exceeds 64K
    android/gradlew app:dependencies
    - Enable (if required) - add to android/app/build.gradle.kts, then do a clean build
        android {
            defaultConfig {
                multiDexEnabled = true // <-- Enable MultiDex
            }
        }

* WHEN YOU WANT A CLEAN BUILD:
    flutter clean       # remove old build artifacts (After upgrading dependencies or changing Gradle/Android/iOS configurations)
    flutter pub get     # fetch dependencies (After adding or updating a dependency in pubspec.yaml)
    flutter build apk   # build the Android APK
        options:
            flutter build apk --debug → Debug APK
            flutter build apk --release → Optimized release APK


Chapter 11 - firebase

* Login to Firebase using Google account - (https://console.firebase.google.com/)
    - Create Firebase Project

* Install Firebase CLI - (https://firebase.google.com/docs/cli#install-cli-mac-linux)
    - Using automatic script:
        curl -sL https://firebase.tools | bash
    - Login:
        firebase login
    - Test the CLI - accessing your account and listing your Firebase projects:
        firebase projects:list
    - Update to latest version (optional use with "sudo", if permissions issues)
        curl -sL https://firebase.tools | upgrade=true bash
    - If you want to uninstall the CLI - use script again (sudo - if permissions issues):
        curl -sL https://firebase.tools | uninstall=true bash

* Install FlutterFireCLI and add to path
    - Install and add to path:
        dart pub global activate flutterfire_cli
        export PATH=$HOME/.pub-cache/bin:$PATH
    - Add permanently to ~/.bashrc
        echo 'export PATH=$HOME/.pub-cache/bin:$PATH' >> ~/.bashrc

* Configure the backend:
    - Run configuration, choose project(from firebase) and platforms to be supported (android, ios, web):
        flutterfire configure


Chapter 12 - Basic Registration Screen  (Incomplete)

* Hot reload/restart
    - hot reload - apply code changes to a running app (on device) without resetting state
    - hot restart - apply code changes and reset state
* State - any data that can change over time and affect what is displayed on the screen
* Stateless vs Stateful
    - Stateful - widget that contains mutable variables, contains information that can be changes
    - Stateless - widget that does not contain any mutable information

* Scaffold - a top-level layout widget that provides the basic visual structure for a screen in a Material Design app
    Key Features of Scaffold
    - appBar – The top bar of the screen.
    - body – The main content area.
    - drawer – A side navigation drawer.
    - bottomNavigationBar – For navigation tabs at the bottom.
    - floatingActionButton (FAB) – A prominent circular action button.
    - snackBars & bottomSheets – Easily show temporary messages or modals.


Chapter 13 - Login View

Chapter 14 - Separating App Initialization from Login and Register Screens

Chapter 15 - Setting up Git and GitHub (written in outside file)

Chapter 16 - Email Verification View

Chapter 17 - Link Between Login and Register View

Chapter 18 - Logout View

Chapter 19 - Go From Login to Notes View
