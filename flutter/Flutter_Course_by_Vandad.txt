*** My Notes App ***


Chapter 8 - Project Setup

- Adding dependencies (firebase_core, firebase_auth, cloud_firestore, firebase_analytics):
    flutter pub add <dependency>   - Adds dependency to pubspec.yaml and downloads it.


Chapter 10 - Android App Setup

- Android SDK (Host and Devcontainer)
- USB Debugging (on device, developer options)
- Setup ADB (Android Debug Bridge) on both Windows Host and DevEnv (if using devcontainer)
- Disable screen sleeping (on device, developer options)
- Android Mirroring (Optional):
    https://github.com/Genymobile/scrcpy/

- Enabling Multi-Dex (Optional, for projects with a lot of dependencies, exceeding 65,536 methods (including your code + libraries))
    - Check (if build is successful, multi-dex NOT requried, if):
    android/gradlew app:dependencies
    - Enable (if required)


Chapter 11 - firebase

* Login to Firebase using Google account - (https://console.firebase.google.com/)
    - Create Firebase Project

* Install Firebase CLI - (https://firebase.google.com/docs/cli#install-cli-mac-linux)
    - Using automatic script:
        curl -sL https://firebase.tools | bash
    - Login:
        firebase login
    - Test the CLI - accessing your account and listing your Firebase projects:
        firebase projects:list
    - Update to latest version (optional use with "sudo", if permissions issues)
        curl -sL https://firebase.tools | upgrade=true bash
    - If you want to uninstall the CLI - use script again (sudo - if permissions issues):
        curl -sL https://firebase.tools | uninstall=true bash

* Install FlutterFireCLI and add to path
    - Install and add to path:
        dart pub global activate flutterfire_cli
        export PATH=$HOME/.pub-cache/bin:$PATH
    - Add permanently to ~/.bashrc
        echo 'export PATH=$HOME/.pub-cache/bin:$PATH' >> ~/.bashrc

* Configure the backend:
    - Run configuration, choose project(from firebase) and platforms to be supported (android, ios, web):
        flutterfire configure






